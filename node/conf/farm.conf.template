# ------------------------------------------------------------------------------
# WARNING: This file might be overriden while deployment.
# ------------------------------------------------------------------------------
# Contains configuration items used by management scripts in 'bin' directory.
#
# All the nodes must have the same 'farm.conf'.
#
# 'farm.conf' is generated from 'farm.conf.template' by Ant script. Data comes
# from *.properties files. Each domain (dev, test, qa, prod etc.) has its own
# *.properties file (dev.properties, test.properties, etc.)
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Application's name. Instance names are generated from this. For example, if
# application name is 'myapp', instance names become 'myapp1', 'myapp2', etc.
# ------------------------------------------------------------------------------
CONF_APP_NAME="@CONF_APP_NAME@"


# ------------------------------------------------------------------------------
# Path to directory in which Tomcat Farm is installed.
# ------------------------------------------------------------------------------
CONF_APP_HOME="@CONF_APP_HOME@"


# ------------------------------------------------------------------------------
# Domain's name. Each domain (dev, test, qa, prod etc.) has its own
# '*.properties' file (dev.properties, test.properties, etc.)
# ------------------------------------------------------------------------------
CONF_DOMAIN_NAME="@CONF_DOMAIN_NAME@"


# ------------------------------------------------------------------------------
# Contains domain topology and conforms to the following structure:
#
#   CONF_NODE_INSTANCES=node1:instance1,instance2,instance3;\
#                       node2:instance4,instance5,instance6;\
#                       node3:instance7,instance8,instance9
#
# In this structure;
# * nodes are separeted by ';'
# * node name and instances running on it are separated by ':'
# * instances are separeted by ','
#
# When a new node or instance is added or removed, CONF_NODE_INSTANCES must be
# updated on all the nodes.
# ------------------------------------------------------------------------------
CONF_NODE_INSTANCES="@CONF_NODE_INSTANCES@"


# ------------------------------------------------------------------------------
# Applications might coexist in the same machine and all the instances of each
# application must have unique ports to prevent port conflicts.
# 
# Each application has unique 'CONF_BASE_PORT' and three ports are automatically
# generated from it for each instance: HTTP, HTTPS ve SHUTDOWN.
#
# Port numbers are generated by using 'CONF_BASE_PORT' and instance id. Instance
# id is extracted from instance name(1 for 'myapp1', 2 for 'myapp2', etc.).
#
# For example, if 'CONF_APP_NAME' is 'myapp' and 'CONF_BASE_PORT' is 8000 
# then;
# - instance myapp1's http port is 8001, shutdown port is 8002, https port is 8003.
# - instance myapp2's http port is 8004, shutdown port is 8005, https port is 8006.
# - ...
# ------------------------------------------------------------------------------
CONF_BASE_PORT="@CONF_BASE_PORT@"


# ------------------------------------------------------------------------------
# Home of the Java that is used while starting and stopping the Tomcat.
#
# Although we might have default Java installation on the machine, we might
# specifically use another one residing in 'CONF_JAVA_HOME'.
# ------------------------------------------------------------------------------
CONF_JAVA_HOME="@CONF_JAVA_HOME@"


# ------------------------------------------------------------------------------
# Application specific JVM arguments.
#
# Example: 
#
#   CONF_JVM_PARAM_APP_ARGS=-Dlog4j.configuration=file:${CONF_APP_HOME}/conf/log4j.xml -Dconf=myapp.conf
# ------------------------------------------------------------------------------
CONF_JVM_PARAM_APP_ARGS="@CONF_JVM_PARAM_APP_ARGS@"


# ------------------------------------------------------------------------------
# JVM memory parameters such as '-Xms', '-Xmx', '-XX:PermSize', etc.
# 
# 'CONF_JVM_PARAM_MEMORY' is only used while Tomcat is starting up. It is not
# used while shutdown.
# 
# Example:
#
#   CONF_JVM_PARAM_MEMORY=-Xms512m -Xmx1024m
# ------------------------------------------------------------------------------
CONF_JVM_PARAM_MEMORY="@CONF_JVM_PARAM_MEMORY@"


# ------------------------------------------------------------------------------
# Tomcat's minimum and maximum thread count limits can be set by passing
# '-DminSpareThreads' and '-DmaxThreads' arguments to JVM. For easier 
# customization, those arguments can be defined in 'CONF_JVM_PARAM_THREAD'.
#
# 'CONF_JVM_PARAM_THREAD' is only used while Tomcat is starting up. It is not
# used while shutdown.
# 
# Example:
#
#   CONF_JVM_PARAM_THREAD=-DminSpareThreads=25 -DmaxThreads=150
# ------------------------------------------------------------------------------
CONF_JVM_PARAM_THREAD="@CONF_JVM_PARAM_THREAD@"


# ------------------------------------------------------------------------------
# 'CONF_JVM_PARAM_KEY_STORE' is path to JKS file that contains TLS private key
# which lets Tomcat to serve on HTTPS port.
#
# 'CONF_JVM_PARAM_TRUST_STORE' is path to JKS file that contains root 
# certificates of the services to which the application needs to access over TLS.
# ------------------------------------------------------------------------------
CONF_JVM_PARAM_KEY_STORE="@CONF_JVM_PARAM_KEY_STORE@"
CONF_JVM_PARAM_KEY_STORE_PASS="@CONF_JVM_PARAM_KEY_STORE_PASS@"
CONF_JVM_PARAM_TRUST_STORE="@CONF_JVM_PARAM_TRUST_STORE@"
CONF_JVM_PARAM_TRUST_STORE_PASS="@CONF_JVM_PARAM_TRUST_STORE_PASS@"


# ------------------------------------------------------------------------------
# These variables are used to make sure the instance is started or stopped
# successfully.
#
# When 'start-verify' command of 'instance.sh' is executed, the process
# continues until 'CONF_STARTUP_SUCCESS_MSG' or 'CONF_STARTUP_FAILURE_MSG'
# is seen on the logs. 'start-verify' fails if logs;
#  - contain 'CONF_STARTUP_FAILURE_MSG' or
#  - do not contain 'CONF_STARTUP_SUCCESS_MSG' in 'CONF_STARTUP_TIMEOUT_SECONDS'
#    seconds.
#
# Similarly, if stopping does not complete in 'CONF_SHUTDOWN_TIMEOUT_SECONDS'
# seconds, the process is killed.
#
# Logs are checked every 'CONF_WAIT_INTERVAL_SECONDS' seconds till command
# fails or succeeds.
# ------------------------------------------------------------------------------
CONF_STARTUP_SUCCESS_MSG="@CONF_STARTUP_SUCCESS_MSG@"
CONF_STARTUP_FAILURE_MSG="@CONF_STARTUP_FAILURE_MSG@"
CONF_STARTUP_TIMEOUT_SECONDS="@CONF_STARTUP_TIMEOUT_SECONDS@"
CONF_SHUTDOWN_TIMEOUT_SECONDS="@CONF_SHUTDOWN_TIMEOUT_SECONDS@"
CONF_WAIT_INTERVAL_SECONDS="@CONF_WAIT_INTERVAL_SECONDS@"


# ------------------------------------------------------------------------------
# High availability (HA) is a must for many applications. Those applications
# must be available while restarting application servers or deploying
# applications. To achieve this, when an operation is completed on a node,
# it is executed on the next node after 'CONF_SERIAL_DOMAIN_OPERATIONS_WAIT_INTERVAL_SECONDS'
# seconds. This behaviour allows load balancer to recognize the node
# is alive again before the next one is getting down.
#
# Note: Commands having '-ha' suffix are considered to support high availability.
# ------------------------------------------------------------------------------
CONF_SERIAL_DOMAIN_OPERATIONS_WAIT_INTERVAL_SECONDS="@CONF_SERIAL_DOMAIN_OPERATIONS_WAIT_INTERVAL_SECONDS@"